title Renting a number

actor NumberOwner
participant SmartContract
actor NumberRenterAlice
actor NumberRenterBob
activate NumberOwner
activate NumberRenterAlice
activate NumberRenterBob
NumberOwner->SmartContract:rentMakeNumberAvailable()
activate SmartContract
deactivateafter SmartContract
NumberRenterAlice -> SmartContract:rentSeeAvailableNumbers()
activate SmartContract
SmartContract-->NumberRenterAlice:String[]
deactivate SmartContract
NumberRenterAlice->SmartContract :rentGetNumberInformation()
activate SmartContract
SmartContract-->NumberRenterAlice:(price,endTimestamp)
deactivate SmartContract
NumberRenterAlice -> SmartContract:rentNumber()
activate SmartContract
deactivateafter SmartContract
NumberRenterAlice -> SmartContract:rentEndInstance()
activate SmartContract
deactivateafter SmartContract
NumberRenterAlice -> SmartContract:withdrawMoney()
activate SmartContract
SmartContract-->NumberRenterAlice:transfer()
deactivate SmartContract
deactivateafter NumberRenterAlice
NumberRenterBob -> SmartContract:rentNumber()
activate SmartContract
deactivateafter SmartContract
note over SmartContract,NumberRenterAlice:<background:#red>Bob forgets to return the Number!
NumberOwner -#red> SmartContract:rentEndInstance()
activate SmartContract
deactivateafter SmartContract

NumberOwner -> SmartContract:rentEndAvailability
activate SmartContract
deactivateafter SmartContract
NumberOwner -> SmartContract:withdrawMoney()
activate SmartContract
SmartContract-->NumberOwner:transfer()
deactivate SmartContract